/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package vistas;

import DTO.*;
import Metodos.TextPrompt;
import Repositorio.*;
import java.awt.Color;
import java.awt.event.WindowAdapter;
import java.awt.event.WindowEvent;
import javax.swing.*;
import javax.swing.border.*;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Jostin
 */
public class CreatePC extends javax.swing.JFrame {

    private Home home;
    private Procesador processor;
    private DiscoDuro discoDuro;
    UnidadOptica rom = new UnidadOptica();
    private SSD ssd;
    TarjetaMadre board = new TarjetaMadre();
    PC compuutador = new PC();
    TextPrompt ph;
    RepoProcesador RP = RepoProcesador.getInstance();
    RepoPuertos RPUERTOS = RepoPuertos.getInstance();
    RepoStorageDivice RSD = RepoStorageDivice.getInstance();
    RepoOpticalDrive ROD = RepoOpticalDrive.getInstance();
    RepoTarjetaMadre RTM = RepoTarjetaMadre.getInstance();
    RepoPC RPC = RepoPC.getInstance();

    /**
     * Creates new form CreatePC
     */
    public CreatePC() {
        initComponents();
        this.setLocationRelativeTo(this);
        resultProcess.setText(RP.verInformacion());
        ph = new TextPrompt("Nombre ROM", nameROM);
        ph = new TextPrompt("Capacidad ROM", capacidadROM);
        resultProcess.setText(this.RP.verInformacion());
        resultROM.setText(ROD.verInformacion());
        validateExistProcesor();
        validateExistROM();
        mostrar();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        addProcesador = new javax.swing.JButton();
        addPuertos = new javax.swing.JButton();
        addDiscoDuro = new javax.swing.JButton();
        EliminarProcesador = new javax.swing.JButton();
        EliminarPuerto = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();
        addManejador = new javax.swing.JButton();
        EliminaManejador = new javax.swing.JButton();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        nombreBoard = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        resultProcess = new javax.swing.JLabel();
        jSeparator1 = new javax.swing.JSeparator();
        resultROM = new javax.swing.JLabel();
        nameROM = new javax.swing.JTextField();
        modifyManejador = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();
        capacidadROM = new javax.swing.JTextField();
        jScrollPane3 = new javax.swing.JScrollPane();
        TPuertos = new javax.swing.JTable();
        modifyProcesador = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setUndecorated(true);

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(51, 153, 255)));

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel1.setText("Procesador");

        jLabel2.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel2.setText("Interfaces De Almacenamiento");

        jLabel4.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel4.setText("Puertos USB");

        addProcesador.setText("Agregar");
        addProcesador.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addProcesadorActionPerformed(evt);
            }
        });

        addPuertos.setText("Agregar");
        addPuertos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addPuertosActionPerformed(evt);
            }
        });

        addDiscoDuro.setText("Agregar");
        addDiscoDuro.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addDiscoDuroActionPerformed(evt);
            }
        });

        EliminarProcesador.setText("Eliminar");
        EliminarProcesador.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                EliminarProcesadorActionPerformed(evt);
            }
        });

        EliminarPuerto.setText("Eliminar");
        EliminarPuerto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                EliminarPuertoActionPerformed(evt);
            }
        });

        jLabel5.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel5.setText("Manejador Optico");

        addManejador.setText("Agregar");
        addManejador.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addManejadorActionPerformed(evt);
            }
        });

        EliminaManejador.setText("Eliminar");
        EliminaManejador.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                EliminaManejadorActionPerformed(evt);
            }
        });

        jLabel6.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel6.setText("Detalles De La Tarjeta Madre");

        jLabel7.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel7.setText("Modelo:");

        nombreBoard.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jLabel9.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel9.setForeground(new java.awt.Color(255, 0, 0));
        jLabel9.setText("X");
        jLabel9.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel9MouseClicked(evt);
            }
        });

        resultProcess.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        resultProcess.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        resultProcess.setText("<html>Componente no agregado</html>");
        resultProcess.setToolTipText("");
        resultProcess.setVerticalAlignment(javax.swing.SwingConstants.TOP);
        resultProcess.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        jSeparator1.setOrientation(javax.swing.SwingConstants.VERTICAL);

        resultROM.setToolTipText("");
        resultROM.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        modifyManejador.setText("Modificar");
        modifyManejador.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                modifyManejadorActionPerformed(evt);
            }
        });

        jButton1.setBackground(new java.awt.Color(0, 153, 102));
        jButton1.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jButton1.setForeground(new java.awt.Color(255, 255, 255));
        jButton1.setText("Confirmar");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        capacidadROM.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                capacidadROMKeyTyped(evt);
            }
        });

        TPuertos.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null},
                {null, null},
                {null, null},
                {null, null}
            },
            new String [] {
                "Nombre del Puerto", "Estado del puerto"
            }
        ));
        jScrollPane3.setViewportView(TPuertos);

        modifyProcesador.setText("Modificar");
        modifyProcesador.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                modifyProcesadorActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(306, 306, 306)
                .addComponent(jLabel6)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel9)
                .addGap(16, 16, 16))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(52, 52, 52)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jButton1)
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jLabel1)
                                .addComponent(jLabel2)
                                .addComponent(resultProcess, javax.swing.GroupLayout.PREFERRED_SIZE, 225, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGap(26, 26, 26)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(addDiscoDuro)
                                .addComponent(EliminarProcesador, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(modifyProcesador, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(addProcesador, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel7)
                        .addGap(18, 18, 18)
                        .addComponent(nombreBoard, javax.swing.GroupLayout.PREFERRED_SIZE, 263, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 37, Short.MAX_VALUE)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 12, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(40, 40, 40)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(resultROM, javax.swing.GroupLayout.PREFERRED_SIZE, 280, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 280, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5)
                    .addComponent(jLabel4)
                    .addComponent(nameROM, javax.swing.GroupLayout.PREFERRED_SIZE, 280, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(capacidadROM, javax.swing.GroupLayout.PREFERRED_SIZE, 280, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 39, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(addManejador, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(modifyManejador, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(EliminaManejador, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addComponent(addPuertos, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(1, 1, 1))
                    .addComponent(EliminarPuerto, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(46, 46, 46))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGap(17, 17, 17)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel9)
                    .addComponent(jLabel6))
                .addGap(63, 63, 63)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(2, 2, 2)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 519, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel4)
                                .addGap(18, 18, 18)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 199, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(35, 35, 35)
                                        .addComponent(jLabel5)
                                        .addGap(24, 24, 24)
                                        .addComponent(nameROM, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(18, 18, 18)
                                        .addComponent(capacidadROM, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(18, 18, 18)
                                        .addComponent(resultROM, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addComponent(addPuertos)
                                        .addGap(18, 18, 18)
                                        .addComponent(EliminarPuerto)
                                        .addGap(216, 216, 216)
                                        .addComponent(addManejador)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(modifyManejador)
                                        .addGap(15, 15, 15)
                                        .addComponent(EliminaManejador)))))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel7)
                            .addComponent(nombreBoard, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(45, 45, 45)
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(addProcesador)
                                .addGap(20, 20, 20)
                                .addComponent(EliminarProcesador)
                                .addGap(18, 18, 18)
                                .addComponent(modifyProcesador))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(2, 2, 2)
                                .addComponent(resultProcess, javax.swing.GroupLayout.PREFERRED_SIZE, 190, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 66, Short.MAX_VALUE)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2)
                            .addComponent(addDiscoDuro))
                        .addGap(145, 145, 145)
                        .addComponent(jButton1)
                        .addGap(48, 48, 48))))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void addProcesadorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addProcesadorActionPerformed
        AddProcesador procesador = new AddProcesador(this, true);
        procesador.setVisible(true);
        String infoProcesador = this.RP.verInformacion();
        this.resultProcess.setText(infoProcesador);
        validateExistProcesor();
    }//GEN-LAST:event_addProcesadorActionPerformed

    private void addPuertosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addPuertosActionPerformed
        int contador = 1;
        int puertoCount = this.RPUERTOS.getNumeroDePuertos();
        String nombrePuerto = "Puerto " + (puertoCount + contador++);
        Puertos nuevoPuerto = new Puertos(nombrePuerto, true);
        this.RPUERTOS.agregar(nuevoPuerto);
        mostrar();
//        board.setPuertos(rPuertos.getPuerto());
    }//GEN-LAST:event_addPuertosActionPerformed

    private void addDiscoDuroActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addDiscoDuroActionPerformed
        AddStorageDivices asd = new AddStorageDivices(this, true);
        asd.setVisible(true);
    }//GEN-LAST:event_addDiscoDuroActionPerformed

    private void addManejadorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addManejadorActionPerformed
        double capacidadRom = Double.parseDouble(capacidadROM.getText());
        this.rom.setType(nameROM.getText());
        this.rom.setCapacidad(capacidadRom);
        this.rom.setFunciona(true);
        this.ROD.agregar(this.rom);
        this.nameROM.setText("");
        capacidadROM.setText("");
        resultROM.setText(this.ROD.verInformacion());
        validateExistROM();
    }//GEN-LAST:event_addManejadorActionPerformed

    private void jLabel9MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel9MouseClicked
        Home h = new Home();
        h.setCreatePC(this);
        h.setVisible(true);
        this.setVisible(false);
    }//GEN-LAST:event_jLabel9MouseClicked

    private void EliminarProcesadorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_EliminarProcesadorActionPerformed
        RepoProcesador rp = RepoProcesador.getInstance();
        rp.eliminar(processor);
        this.resultProcess.setText(rp.verInformacion());
        validateExistProcesor();
    }//GEN-LAST:event_EliminarProcesadorActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        if (!this.nombreBoard.getText().isEmpty() || this.RP.getProcesador() != null) {
            this.board.setNombre(this.nombreBoard.getText());
            this.board.setProcesador(this.RP.getProcesador());
            this.board.setPuertos(this.RPUERTOS.getPuerto());
            this.board.setStorageDevice(this.RSD.getStoragedevice());
            this.board.setRom(this.ROD.getManejador());

            this.RTM.agregar(board);
            this.RPC.crearPc(this.RTM.getBoard());
            if (RPC.pcIsCreated()) {
                Home h = new Home();
                h.setCreatePC(this);
                h.setVisible(true);
                this.setVisible(false);
            }
        } else {
            JOptionPane.showMessageDialog(null, "Es necesario el modelo de la board y procesador para que funcione el PC, \nvalide que esten agregados a la board.", "ERROR", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void capacidadROMKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_capacidadROMKeyTyped
        char validar = evt.getKeyChar();

        if (validar < '0' || validar > '9' && validar == '.') {
            evt.consume();
        }
    }//GEN-LAST:event_capacidadROMKeyTyped

    private void EliminarPuertoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_EliminarPuertoActionPerformed
        this.RPUERTOS.elimiarPuerto();
        mostrar();
    }//GEN-LAST:event_EliminarPuertoActionPerformed

    private void EliminaManejadorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_EliminaManejadorActionPerformed
        this.ROD.eliminar(this.rom);
        resultROM.setText(this.ROD.verInformacion());
        validateExistROM();
    }//GEN-LAST:event_EliminaManejadorActionPerformed

    private void modifyManejadorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_modifyManejadorActionPerformed
        double capacidadRom = Double.parseDouble(capacidadROM.getText());
        if (this.ROD.getManejador() != null) {
            if (!this.capacidadROM.getText().isEmpty() && !this.nameROM.getText().isEmpty()) {
                this.rom.setType(nameROM.getText());
                this.rom.setCapacidad(capacidadRom);
                this.ROD.modificar(rom);
            } else {
                JOptionPane.showMessageDialog(null, "Es necesario que llene los campos", "ERROR", JOptionPane.ERROR_MESSAGE);
            }
        }
        resultROM.setText(this.ROD.verInformacion());
        validateExistROM();
    }//GEN-LAST:event_modifyManejadorActionPerformed

    private void modifyProcesadorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_modifyProcesadorActionPerformed
        AddProcesador procesador = new AddProcesador(this, true);
        procesador.setVisible(true);
        String infoProcesador = this.RP.verInformacion();
        this.resultProcess.setText(infoProcesador);
        validateExistProcesor();
    }//GEN-LAST:event_modifyProcesadorActionPerformed

    public final void mostrar() {
        DefaultTableModel modelo = new DefaultTableModel();

        modelo = (DefaultTableModel) this.TPuertos.getModel();
        modelo.setNumRows(this.RPUERTOS.getPuerto().size());
        for (int j = 0; j < this.RPUERTOS.getPuerto().size(); j++) {
            modelo.setValueAt(this.RPUERTOS.getPuerto().get(j).getNombre(), j, 0);
            if (this.RPUERTOS.getPuerto().get(j).isFunciona()) {
                modelo.setValueAt("Funciona", j, 1);
            } else {
                modelo.setValueAt("No unciona", j, 1);
            }
        }
    }

    public void setHome(Home home) {
        this.home = home;
    }

    public void validateExistProcesor() {
        if (this.RP.getProcesador() == null) {
            this.modifyProcesador.setEnabled(false);
            this.EliminarProcesador.setEnabled(false);
            this.addProcesador.setEnabled(true);
        } else {
            this.modifyProcesador.setEnabled(true);
            this.EliminarProcesador.setEnabled(true);
            this.addProcesador.setEnabled(false);
        }
    }

    public void validateExistROM() {
        if (this.ROD.getManejador() == null) {
            this.modifyManejador.setEnabled(false);
            this.EliminaManejador.setEnabled(false);
            this.addManejador.setEnabled(true);
        } else {
            this.addManejador.setEnabled(false);
            this.modifyManejador.setEnabled(true);
            this.EliminaManejador.setEnabled(true);
        }
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(CreatePC.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(CreatePC.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(CreatePC.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(CreatePC.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new CreatePC().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton EliminaManejador;
    private javax.swing.JButton EliminarProcesador;
    private javax.swing.JButton EliminarPuerto;
    private javax.swing.JTable TPuertos;
    private javax.swing.JButton addDiscoDuro;
    private javax.swing.JButton addManejador;
    private javax.swing.JButton addProcesador;
    private javax.swing.JButton addPuertos;
    private javax.swing.JTextField capacidadROM;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JButton modifyManejador;
    private javax.swing.JButton modifyProcesador;
    private javax.swing.JTextField nameROM;
    private javax.swing.JTextField nombreBoard;
    private javax.swing.JLabel resultProcess;
    private javax.swing.JLabel resultROM;
    // End of variables declaration//GEN-END:variables
}
